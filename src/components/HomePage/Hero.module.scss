@use "../../styles/mixins" as *;

.wrapper {
  background-color: #191919;

  @include mq(tablet) {
    padding-top: 1rem;
  }
  @include mq(desktop) {
    padding-block: 2rem;
  }
}

.container {
  max-width: var(--container-max-width);
  margin-inline: auto;

  @include mq(desktop) {
    /* Below - css hack. it should ideally be: 
    (max-width: calc(1100px + 2 * var(--container-margin-inline-min)
    but css doesn't accept variables inside media queries*/

    @media (max-width: calc(1100px + 5rem)) {
      margin-left: var(--container-margin-inline-min);
    }
  }
}

.grid {
  display: grid;
  grid-template-columns: 1fr;
  place-items: center;
}

.picture {
  grid-area: 1 / 1 / -1 / -1;
}

.description {
  margin-top: 1rem;

  @include basicText(light, medium);
}

.textFlexbox {
  grid-area: 1 / 1 / -1 / -1;

  display: flex;
  flex-direction: column;
  place-items: center;

  max-width: 32ch;

  text-align: center;
  color: var(--clr-white);
}

.new {
  margin-top: 4rem;
  text-transform: uppercase;
  opacity: 0.5;
  font-size: var(--fs-200);
  letter-spacing: var(--ls-600);
  color: var(--clr-white);
  text-transform: uppercase;
}

.heading {
  z-index: 1;
  margin-top: 1rem;
  font-size: calc(var(--fs-700) + 0.375rem);
  font-weight: var(--fw-bold);
  line-height: var(--lh-600);
  text-transform: uppercase;
}
.hero-text {
  margin-top: 1.5rem;
  @include basicText(light);
}

.link {
  z-index: 1;
  margin-top: 1.75rem;
}

@include mq(tablet) {
  .heading {
    margin-top: 1.5rem;
    font-size: var(--fs-900);
    line-height: var(--lh-800);
    letter-spacing: var(--ls-500);
  }

  .link {
    margin-top: 2.5rem;
  }
}

@include mq(desktop) {
  .grid {
    grid-template-columns: 4fr 5fr;
  }

  .textFlexbox {
    grid-column: 1/2;
    text-align: start;
    justify-self: start;

    place-items: start;

    max-width: 38ch;
  }

  .heading {
    font-size: min(var(--fs-900), 5.5vw);
  }

  .picture {
    grid-column: 2/3;
  }
}
